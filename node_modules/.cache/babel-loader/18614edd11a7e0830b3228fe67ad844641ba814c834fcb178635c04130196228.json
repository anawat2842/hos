{"ast":null,"code":"import axios from \"axios\";\n// const apiUrl = process.env.VUE_APP_API_URL;\nexport default {\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  onMounted() {\n    console.log(process.env.VUE_APP_API_URL);\n  },\n  data() {\n    return {\n      showEdit: false,\n      update_ID: \"\",\n      selected: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\"\n      },\n      apiUrl: process.env.VUE_APP_API_URL,\n      desserts: []\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios.get(this.apiUrl + \"patients\").then(response => {\n        this.desserts = response.data;\n        console.log(\"patients -\", response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    editItem(item) {\n      let id = item.Patient_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        this.showEdit = true;\n        this.update_ID = item.Patient_ID;\n        this.selected.Name = item.Name;\n        let str = item.Date_of_Birth.toString();\n        let DOB = str.split(\"T\");\n        console.log(\"DOB\", DOB[0]);\n        this.selected.Date_of_Birth = DOB[0];\n        this.selected.Gender = item.Gender;\n        this.selected.Phone = item.Phone;\n        this.selected.Email = item.Email;\n        this.selected.Address = item.Address;\n      }\n      console.log(\"showEdit\", this.selected);\n      // this.$router.push({ name: \"EditPatient\", params: { id: id } });\n    },\n    // create fuction to delete data from API\n    deleteItem(item) {\n      let id = item.Patient_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        axios.delete(this.apiUrl + \"patient/\" + id).then(response => {\n          console.log(\"delete success\", response.data);\n          this.getData();\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    // create function to update data\n    updateItem() {\n      let id = this.update_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        axios.put(this.apiUrl + \"patient/\" + id, this.selected).then(response => {\n          console.log(\"update success\", response.data);\n          this.getData();\n          this.showEdit = false;\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    cancelEdit() {\n      this.showEdit = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","beforeMount","getData","console","log","onMounted","process","env","VUE_APP_API_URL","data","showEdit","update_ID","selected","Name","Gender","Date_of_Birth","Phone","Email","Address","apiUrl","desserts","methods","get","then","response","catch","error","editItem","item","id","Patient_ID","undefined","str","toString","DOB","split","deleteItem","delete","updateItem","put","cancelEdit"],"sources":["src/components/patient-list.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h1>Patient List</h1>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <template>\n                    <v-simple-table>\n                      <template v-slot:default>\n                        <thead>\n                          <tr>\n                            <th class=\"text-left\">Name</th>\n                            <th class=\"text-left\">DOB</th>\n                            <th class=\"text-left\">Phone</th>\n                            <th class=\"text-left\">Email</th>\n                            <th class=\"text-left\">Gender</th>\n                            <th class=\"text-left\">Address</th>\n                            <th class=\"text-left\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr v-for=\"item in desserts\" :key=\"item.name\">\n                            <td>{{ item.Name }}</td>\n                            <td>{{ item.Date_of_Birth }}</td>\n                            <td>{{ item.Phone }}</td>\n                            <td>{{ item.Email }}</td>\n                            <td>{{ item.Gender }}</td>\n                            <td>{{ item.Address }}</td>\n                            <td class=\"button-group\">\n                              <v-btn\n                                color=\"amber\"\n                                small\n                                @click=\"editItem(item)\"\n                              >\n                                Edit\n                              </v-btn>\n                              <v-btn\n                                small\n                                color=\"danger\"\n                                @click=\"deleteItem(item)\"\n                              >\n                                Delete\n                              </v-btn>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </template>\n                    </v-simple-table>\n                  </template>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n      <v-row v-if=\"showEdit == true\">\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              Edit Information of <b>{{ this.selected.Name }}</b>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Name\"\n                    label=\"Name\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Date_of_Birth\"\n                    label=\"Date of Birth\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Gender\"\n                    label=\"Gender\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Phone\"\n                    label=\"Phone\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Email\"\n                    label=\"Email\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                    class=\"text-field\"\n                    dense\n                    v-model=\"selected.Address\"\n                    label=\"Address\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-btn color=\"green\" small @click=\"updateItem()\">\n                    Update\n                  </v-btn>\n                  <v-btn color=\"danger\" small @click=\"cancelEdit()\">\n                    Cancel\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n      <v-row v-else>\n        <v-col cols=\"12\"> Select data to edit </v-col>\n      </v-row>\n    </v-container>\n    <v-dialog> </v-dialog>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\n// const apiUrl = process.env.VUE_APP_API_URL;\nexport default {\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  onMounted() {\n    console.log(process.env.VUE_APP_API_URL);\n  },\n  data() {\n    return {\n      showEdit: false,\n      update_ID: \"\",\n      selected: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\",\n      },\n      apiUrl: process.env.VUE_APP_API_URL,\n      desserts: [],\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios\n        .get(this.apiUrl + \"patients\")\n        .then((response) => {\n          this.desserts = response.data;\n          console.log(\"patients -\", response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    editItem(item) {\n      let id = item.Patient_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        this.showEdit = true;\n        this.update_ID = item.Patient_ID;\n        this.selected.Name = item.Name;\n        let str = item.Date_of_Birth.toString();\n        let DOB = str.split(\"T\");\n        console.log(\"DOB\", DOB[0]);\n        this.selected.Date_of_Birth = DOB[0];\n        this.selected.Gender = item.Gender;\n        this.selected.Phone = item.Phone;\n        this.selected.Email = item.Email;\n        this.selected.Address = item.Address;\n      }\n\n      console.log(\"showEdit\", this.selected);\n      // this.$router.push({ name: \"EditPatient\", params: { id: id } });\n    },\n\n    // create fuction to delete data from API\n    deleteItem(item) {\n      let id = item.Patient_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        axios\n          .delete(this.apiUrl + \"patient/\" + id)\n          .then((response) => {\n            console.log(\"delete success\", response.data);\n            this.getData();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    // create function to update data\n    updateItem() {\n      let id = this.update_ID;\n      if (id != null && id != \"\" && id != undefined) {\n        axios\n          .put(this.apiUrl + \"patient/\" + id, this.selected)\n          .then((response) => {\n            console.log(\"update success\", response.data);\n            this.getData();\n            this.showEdit = false;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    cancelEdit() {\n      this.showEdit = false;\n    },\n  },\n};\n</script>\n"],"mappings":"AAgJA,OAAAA,KAAA;AACA;AACA;EACAC,YAAA;IACA,KAAAC,OAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,UAAA;IACAF,OAAA,CAAAC,GAAA,CAAAE,OAAA,CAAAC,GAAA,CAAAC,eAAA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,QAAA;QACAC,IAAA;QACAC,MAAA;QACAC,aAAA;QACAC,KAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAC,MAAA,EAAAb,OAAA,CAAAC,GAAA,CAAAC,eAAA;MACAY,QAAA;IACA;EACA;EACAC,OAAA;IACA;IACAnB,QAAA;MACAF,KAAA,CACAsB,GAAA,MAAAH,MAAA,eACAI,IAAA,CAAAC,QAAA;QACA,KAAAJ,QAAA,GAAAI,QAAA,CAAAf,IAAA;QACAN,OAAA,CAAAC,GAAA,eAAAoB,QAAA,CAAAf,IAAA;MACA,GACAgB,KAAA,CAAAC,KAAA;QACAvB,OAAA,CAAAC,GAAA,CAAAsB,KAAA;MACA;IACA;IACAC,SAAAC,IAAA;MACA,IAAAC,EAAA,GAAAD,IAAA,CAAAE,UAAA;MACA,IAAAD,EAAA,YAAAA,EAAA,UAAAA,EAAA,IAAAE,SAAA;QACA,KAAArB,QAAA;QACA,KAAAC,SAAA,GAAAiB,IAAA,CAAAE,UAAA;QACA,KAAAlB,QAAA,CAAAC,IAAA,GAAAe,IAAA,CAAAf,IAAA;QACA,IAAAmB,GAAA,GAAAJ,IAAA,CAAAb,aAAA,CAAAkB,QAAA;QACA,IAAAC,GAAA,GAAAF,GAAA,CAAAG,KAAA;QACAhC,OAAA,CAAAC,GAAA,QAAA8B,GAAA;QACA,KAAAtB,QAAA,CAAAG,aAAA,GAAAmB,GAAA;QACA,KAAAtB,QAAA,CAAAE,MAAA,GAAAc,IAAA,CAAAd,MAAA;QACA,KAAAF,QAAA,CAAAI,KAAA,GAAAY,IAAA,CAAAZ,KAAA;QACA,KAAAJ,QAAA,CAAAK,KAAA,GAAAW,IAAA,CAAAX,KAAA;QACA,KAAAL,QAAA,CAAAM,OAAA,GAAAU,IAAA,CAAAV,OAAA;MACA;MAEAf,OAAA,CAAAC,GAAA,kBAAAQ,QAAA;MACA;IACA;IAEA;IACAwB,WAAAR,IAAA;MACA,IAAAC,EAAA,GAAAD,IAAA,CAAAE,UAAA;MACA,IAAAD,EAAA,YAAAA,EAAA,UAAAA,EAAA,IAAAE,SAAA;QACA/B,KAAA,CACAqC,MAAA,MAAAlB,MAAA,gBAAAU,EAAA,EACAN,IAAA,CAAAC,QAAA;UACArB,OAAA,CAAAC,GAAA,mBAAAoB,QAAA,CAAAf,IAAA;UACA,KAAAP,OAAA;QACA,GACAuB,KAAA,CAAAC,KAAA;UACAvB,OAAA,CAAAC,GAAA,CAAAsB,KAAA;QACA;MACA;IACA;IACA;IACAY,WAAA;MACA,IAAAT,EAAA,QAAAlB,SAAA;MACA,IAAAkB,EAAA,YAAAA,EAAA,UAAAA,EAAA,IAAAE,SAAA;QACA/B,KAAA,CACAuC,GAAA,MAAApB,MAAA,gBAAAU,EAAA,OAAAjB,QAAA,EACAW,IAAA,CAAAC,QAAA;UACArB,OAAA,CAAAC,GAAA,mBAAAoB,QAAA,CAAAf,IAAA;UACA,KAAAP,OAAA;UACA,KAAAQ,QAAA;QACA,GACAe,KAAA,CAAAC,KAAA;UACAvB,OAAA,CAAAC,GAAA,CAAAsB,KAAA;QACA;MACA;IACA;IACAc,WAAA;MACA,KAAA9B,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}