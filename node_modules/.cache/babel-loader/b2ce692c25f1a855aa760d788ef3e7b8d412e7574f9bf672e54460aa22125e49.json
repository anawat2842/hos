{"ast":null,"code":"import axios from \"axios\";\n// const apiUrl = process.env.VUE_APP_API_URL;\nexport default {\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  onMounted() {\n    console.log(process.env.VUE_APP_API_URL);\n  },\n  data() {\n    return {\n      apiUrl: process.env.VUE_APP_API_URL,\n      headers: [{\n        text: \"Date\",\n        align: \"start\",\n        sortable: false,\n        value: \"Date\"\n      }, {\n        text: \"Time\",\n        value: \"Time\"\n      }, {\n        text: \"Reason\",\n        value: \"Reason\"\n      }, {\n        text: \"Patient_name\",\n        value: \"Patient_name\"\n      }, {\n        text: \"Doctor_name\",\n        value: \"Doctor_name\"\n      }],\n      desserts: []\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios.get(this.apiUrl + \"appointments\").then(response => {\n        this.desserts = response.data;\n        console.log(\"appointment -\", response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","beforeMount","getData","console","log","onMounted","process","env","VUE_APP_API_URL","data","apiUrl","headers","text","align","sortable","value","desserts","methods","get","then","response","catch","error"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h1>Doctor List</h1>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-data-table\n                    :headers=\"headers\"\n                    :items=\"desserts\"\n                    :items-per-page=\"5\"\n                    class=\"elevation-1\"\n                  ></v-data-table>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n    <!-- <v-data-table\n      small\n      :headers=\"headers\"\n      :items=\"desserts\"\n      :items-per-page=\"5\"\n      class=\"elevation-1\"\n    ></v-data-table>\n    <p>{{ apiUrl }}</p> -->\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\n// const apiUrl = process.env.VUE_APP_API_URL;\nexport default {\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  onMounted() {\n    console.log(process.env.VUE_APP_API_URL);\n  },\n  data() {\n    return {\n      apiUrl: process.env.VUE_APP_API_URL,\n      headers: [\n        {\n          text: \"Date\",\n          align: \"start\",\n          sortable: false,\n          value: \"Date\",\n        },\n        { text: \"Time\", value: \"Time\" },\n        { text: \"Reason\", value: \"Reason\" },\n        { text: \"Patient_name\", value: \"Patient_name\" },\n        { text: \"Doctor_name\", value: \"Doctor_name\" },\n      ],\n      desserts: [],\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios\n        .get(this.apiUrl + \"appointments\")\n        .then((response) => {\n          this.desserts = response.data;\n          console.log(\"appointment -\", response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n"],"mappings":"AAoCA,OAAAA,KAAA;AACA;AACA;EACAC,YAAA;IACA,KAAAC,OAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,UAAA;IACAF,OAAA,CAAAC,GAAA,CAAAE,OAAA,CAAAC,GAAA,CAAAC,eAAA;EACA;EACAC,KAAA;IACA;MACAC,MAAA,EAAAJ,OAAA,CAAAC,GAAA,CAAAC,eAAA;MACAG,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,EACA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA;IACAf,QAAA;MACAF,KAAA,CACAkB,GAAA,MAAAR,MAAA,mBACAS,IAAA,CAAAC,QAAA;QACA,KAAAJ,QAAA,GAAAI,QAAA,CAAAX,IAAA;QACAN,OAAA,CAAAC,GAAA,kBAAAgB,QAAA,CAAAX,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAnB,OAAA,CAAAC,GAAA,CAAAkB,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}