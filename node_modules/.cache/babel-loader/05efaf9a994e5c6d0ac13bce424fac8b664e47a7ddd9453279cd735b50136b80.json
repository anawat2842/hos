{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      showEditDialog: false,\n      showAddDialog: false,\n      update_ID: \"\",\n      selected: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\"\n      },\n      newPatient: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\"\n      },\n      apiUrl: process.env.VUE_APP_API_URL,\n      desserts: []\n    };\n  },\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  mounted() {\n    this.getData();\n    console.log(\"mounted\");\n  },\n  methods: {\n    getData() {\n      axios.get(this.apiUrl + \"appointments\").then(response => {\n        //   this.desserts = response.data;\n        response.data.forEach(element => {\n          let str = element.Date.toString();\n          let DOB = str.split(\"T\");\n          element.Date = DOB[0];\n          this.desserts.push(element);\n        });\n        this.desserts.forEach(element1 => {\n          let str = element1.Time.toString();\n          let DOB = str.split(\"T\");\n          let time = DOB[1].split(\":\");\n          element1.Time = time[1].split(\":\");\n          this.desserts.push(element1);\n        });\n        this.desserts = response.data;\n        console.log(\"appointments -\", response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    // editItem(item) {\n    //   this.selected = {\n    //     ...item,\n    //     Date_of_Birth: item.Date_of_Birth.split(\"T\")[0],\n    //   };\n    //   this.update_ID = item.Patient_ID;\n    //   this.showEditDialog = true;\n    // },\n    // deleteItem(item) {\n    //   axios\n    //     .delete(`${this.apiUrl}patient/${item.Patient_ID}`)\n    //     .then(() => {\n    //       this.getData();\n    //     })\n    //     .catch((error) => {\n    //       console.error(error);\n    //     });\n    // },\n    // updateItem() {\n    //   axios\n    //     .put(`${this.apiUrl}patient/${this.update_ID}`, this.selected)\n    //     .then(() => {\n    //       this.getData();\n    //       this.showEditDialog = false;\n    //     })\n    //     .catch((error) => {\n    //       console.error(error);\n    //     });\n    // },\n    cancelEdit() {\n      this.showEditDialog = false;\n    },\n    addPatient() {\n      axios.post(`${this.apiUrl}patient`, this.newPatient).then(() => {\n        this.getData();\n        this.showAddDialog = false;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","showEditDialog","showAddDialog","update_ID","selected","Name","Gender","Date_of_Birth","Phone","Email","Address","newPatient","apiUrl","process","env","VUE_APP_API_URL","desserts","beforeMount","getData","console","log","mounted","methods","get","then","response","forEach","element","str","Date","toString","DOB","split","push","element1","Time","time","catch","error","cancelEdit","addPatient","post"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h1>Appointment List</h1>\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"showAddDialog = true\">Add</v-btn>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-simple-table>\n                    <template v-slot:default>\n                      <thead>\n                        <tr>\n                          <th class=\"text-center\">No.</th>\n                          <th class=\"text-center\">Date</th>\n                          <th class=\"text-center\">Time</th>\n                          <th class=\"text-center\">Patient_name</th>\n                          <th class=\"text-center\">Reason</th>\n                          <th class=\"text-center\">Doctor_name</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr\n                          v-for=\"(item, index) in desserts\"\n                          :key=\"item.Appointment_ID\"\n                        >\n                          <td class=\"text-left\">{{ index + 1 }}</td>\n                          <td class=\"text-left\">{{ item.Date }}</td>\n                          <td class=\"text-left\">{{ item.Time }}</td>\n                          <td class=\"text-left\">{{ item.Patient_name }}</td>\n                          <td class=\"text-left\">{{ item.Reason }}</td>\n                          <td class=\"text-left\">{{ item.Doctor_name }}</td>\n                          <td class=\"text-center\">\n                            <v-btn color=\"amber\" small @click=\"editItem(item)\"\n                              >Edit</v-btn\n                            >\n                            <v-btn color=\"red\" small @click=\"deleteItem(item)\"\n                              >Delete</v-btn\n                            >\n                          </td>\n                        </tr>\n                      </tbody>\n                    </template>\n                  </v-simple-table>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <v-dialog v-model=\"showEditDialog\" max-width=\"600px\">\n        <v-card>\n          <v-card-title\n            >Edit Information of <b>{{ selected.Name }}</b></v-card-title\n          >\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Name\"\n                  label=\"Name\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Date_of_Birth\"\n                  label=\"Date of Birth\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Gender\"\n                  label=\"Gender\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Phone\"\n                  label=\"Phone\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Email\"\n                  label=\"Email\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"selected.Address\"\n                  label=\"Address\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-btn color=\"green\" small @click=\"updateItem()\">Update</v-btn>\n                <v-btn color=\"danger\" small @click=\"cancelEdit()\">Cancel</v-btn>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n\n      <v-dialog v-model=\"showAddDialog\" persistent max-width=\"600px\">\n        <v-card>\n          <v-card-title>Add New Patient</v-card-title>\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Name\"\n                  label=\"Name\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Date_of_Birth\"\n                  label=\"Date of Birth\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Gender\"\n                  label=\"Gender\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Phone\"\n                  label=\"Phone\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Email\"\n                  label=\"Email\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"newPatient.Address\"\n                  label=\"Address\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-btn color=\"blue\" @click=\"addPatient()\">Add Patient</v-btn>\n                <v-btn color=\"red\" @click=\"showAddDialog = false\">Cancel</v-btn>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      showEditDialog: false,\n      showAddDialog: false,\n      update_ID: \"\",\n      selected: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\",\n      },\n      newPatient: {\n        Name: \"\",\n        Gender: \"\",\n        Date_of_Birth: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Address: \"\",\n      },\n      apiUrl: process.env.VUE_APP_API_URL,\n      desserts: [],\n    };\n  },\n  beforeMount() {\n    this.getData();\n    console.log(\"beforeMount\");\n  },\n  mounted() {\n    this.getData();\n    console.log(\"mounted\");\n  },\n  methods: {\n    getData() {\n      axios\n        .get(this.apiUrl + \"appointments\")\n        .then((response) => {\n          //   this.desserts = response.data;\n          response.data.forEach((element) => {\n            let str = element.Date.toString();\n            let DOB = str.split(\"T\");\n            element.Date = DOB[0];\n            this.desserts.push(element);\n          });\n          this.desserts.forEach((element1) => {\n            let str = element1.Time.toString();\n            let DOB = str.split(\"T\");\n            let time = DOB[1].split(\":\");\n            element1.Time = time[1].split(\":\");\n            this.desserts.push(element1);\n          });\n          this.desserts = response.data;\n          console.log(\"appointments -\", response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    // editItem(item) {\n    //   this.selected = {\n    //     ...item,\n    //     Date_of_Birth: item.Date_of_Birth.split(\"T\")[0],\n    //   };\n    //   this.update_ID = item.Patient_ID;\n    //   this.showEditDialog = true;\n    // },\n    // deleteItem(item) {\n    //   axios\n    //     .delete(`${this.apiUrl}patient/${item.Patient_ID}`)\n    //     .then(() => {\n    //       this.getData();\n    //     })\n    //     .catch((error) => {\n    //       console.error(error);\n    //     });\n    // },\n    // updateItem() {\n    //   axios\n    //     .put(`${this.apiUrl}patient/${this.update_ID}`, this.selected)\n    //     .then(() => {\n    //       this.getData();\n    //       this.showEditDialog = false;\n    //     })\n    //     .catch((error) => {\n    //       console.error(error);\n    //     });\n    // },\n    cancelEdit() {\n      this.showEditDialog = false;\n    },\n    addPatient() {\n      axios\n        .post(`${this.apiUrl}patient`, this.newPatient)\n        .then(() => {\n          this.getData();\n          this.showAddDialog = false;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* General Styles */\n#app {\n  font-family: \"Roboto\", sans-serif;\n  background-color: #f5f5f5;\n  color: #424242;\n}\n\n/* App Bar */\n.v-app-bar {\n  background-color: #3f51b5;\n}\n\n.v-toolbar-title {\n  color: #ffffff;\n}\n\n.v-btn {\n  color: #ffffff;\n}\n\n.v-btn:hover {\n  background-color: #303f9f;\n}\n\n.v-container {\n  padding: 20px;\n}\n\n.v-card {\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.v-card-title {\n  background-color: #e3f2fd;\n  color: #1e88e5;\n  border-bottom: 1px solid #bbdefb;\n  font-size: 1.5rem;\n}\n\n.v-card-text {\n  padding: 20px;\n}\n\n/* Buttons */\n.v-btn {\n  border-radius: 4px;\n}\n\n.v-btn.small {\n  padding: 6px 12px;\n}\n\n.v-btn.color-primary {\n  background-color: #4caf50;\n}\n\n.v-btn.color-danger {\n  background-color: #f44336;\n}\n\n.v-btn.color-green {\n  background-color: #4caf50;\n}\n\n.v-btn.color-blue {\n  background-color: #2196f3;\n}\n\n/* Table */\n.v-simple-table {\n  width: 100%;\n}\n\n.v-simple-table th {\n  background-color: #eeeeee;\n}\n\n.v-simple-table td {\n  border-bottom: 1px solid #dddddd;\n}\n\n.v-simple-table th,\n.v-simple-table td {\n  padding: 12px;\n}\n\n.v-simple-table tr:hover {\n  background-color: #f1f8ff;\n}\n\n/* Dialogs */\n.v-dialog {\n  border-radius: 8px;\n}\n\n.v-dialog .v-card {\n  padding: 20px;\n}\n\n.v-dialog .v-card-title {\n  font-size: 1.25rem;\n}\n\n.v-dialog .v-card-text {\n  font-size: 1rem;\n}\n\n.v-dialog .v-btn {\n  margin-top: 16px;\n}\n</style>\n"],"mappings":";AA8KA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,aAAA;MACAC,SAAA;MACAC,QAAA;QACAC,IAAA;QACAC,MAAA;QACAC,aAAA;QACAC,KAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAC,UAAA;QACAN,IAAA;QACAC,MAAA;QACAC,aAAA;QACAC,KAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAE,MAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA;MACAC,QAAA;IACA;EACA;EACAC,YAAA;IACA,KAAAC,OAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,QAAA;IACA,KAAAH,OAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAE,OAAA;IACAJ,QAAA;MACAnB,KAAA,CACAwB,GAAA,MAAAX,MAAA,mBACAY,IAAA,CAAAC,QAAA;QACA;QACAA,QAAA,CAAAzB,IAAA,CAAA0B,OAAA,CAAAC,OAAA;UACA,IAAAC,GAAA,GAAAD,OAAA,CAAAE,IAAA,CAAAC,QAAA;UACA,IAAAC,GAAA,GAAAH,GAAA,CAAAI,KAAA;UACAL,OAAA,CAAAE,IAAA,GAAAE,GAAA;UACA,KAAAf,QAAA,CAAAiB,IAAA,CAAAN,OAAA;QACA;QACA,KAAAX,QAAA,CAAAU,OAAA,CAAAQ,QAAA;UACA,IAAAN,GAAA,GAAAM,QAAA,CAAAC,IAAA,CAAAL,QAAA;UACA,IAAAC,GAAA,GAAAH,GAAA,CAAAI,KAAA;UACA,IAAAI,IAAA,GAAAL,GAAA,IAAAC,KAAA;UACAE,QAAA,CAAAC,IAAA,GAAAC,IAAA,IAAAJ,KAAA;UACA,KAAAhB,QAAA,CAAAiB,IAAA,CAAAC,QAAA;QACA;QACA,KAAAlB,QAAA,GAAAS,QAAA,CAAAzB,IAAA;QACAmB,OAAA,CAAAC,GAAA,mBAAAK,QAAA,CAAAzB,IAAA;MACA,GACAqC,KAAA,CAAAC,KAAA;QACAnB,OAAA,CAAAC,GAAA,CAAAkB,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,WAAA;MACA,KAAAtC,cAAA;IACA;IACAuC,WAAA;MACAzC,KAAA,CACA0C,IAAA,SAAA7B,MAAA,gBAAAD,UAAA,EACAa,IAAA;QACA,KAAAN,OAAA;QACA,KAAAhB,aAAA;MACA,GACAmC,KAAA,CAAAC,KAAA;QACAnB,OAAA,CAAAmB,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}