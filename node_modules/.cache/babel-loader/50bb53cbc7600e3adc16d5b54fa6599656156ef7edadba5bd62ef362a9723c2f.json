{"ast":null,"code":"const apiURL = process.env.VUE_APP_API_URL;\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      headers: [{\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\"\n      }, {\n        text: \"Calories\",\n        value: \"calories\"\n      }, {\n        text: \"Fat (g)\",\n        value: \"fat\"\n      }, {\n        text: \"Carbs (g)\",\n        value: \"carbs\"\n      }, {\n        text: \"Protein (g)\",\n        value: \"protein\"\n      }, {\n        text: \"Iron (%)\",\n        value: \"iron\"\n      }],\n      desserts: [{\n        name: \"Frozen Yogurt\",\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: 1\n      }, {\n        name: \"Ice cream sandwich\",\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: 1\n      }, {\n        name: \"Eclair\",\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: 7\n      }, {\n        name: \"Cupcake\",\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: 8\n      }, {\n        name: \"Gingerbread\",\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        iron: 16\n      }, {\n        name: \"Jelly bean\",\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        iron: 0\n      }, {\n        name: \"Lollipop\",\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        iron: 2\n      }, {\n        name: \"Honeycomb\",\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        iron: 45\n      }, {\n        name: \"Donut\",\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        iron: 22\n      }, {\n        name: \"KitKat\",\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        iron: 6\n      }]\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios.get(apiURL + \"doctors\").then(response => {\n        this.desserts = response.data;\n        console.log(\"doctor -\".response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiURL","process","env","VUE_APP_API_URL","axios","data","headers","text","align","sortable","value","desserts","name","calories","fat","carbs","protein","iron","methods","getData","get","then","response","console","log","catch","error"],"sources":["src/components/doctor-list.vue"],"sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"desserts\"\n    :items-per-page=\"5\"\n    class=\"elevation-1\"\n  ></v-data-table>\n</template>\n<script>\nconst apiURL = process.env.VUE_APP_API_URL;\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      headers: [\n        {\n          text: \"Dessert (100g serving)\",\n          align: \"start\",\n          sortable: false,\n          value: \"name\",\n        },\n        { text: \"Calories\", value: \"calories\" },\n        { text: \"Fat (g)\", value: \"fat\" },\n        { text: \"Carbs (g)\", value: \"carbs\" },\n        { text: \"Protein (g)\", value: \"protein\" },\n        { text: \"Iron (%)\", value: \"iron\" },\n      ],\n      desserts: [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n          iron: 1,\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n          iron: 1,\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0,\n          iron: 7,\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          iron: 8,\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9,\n          iron: 16,\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0,\n          iron: 0,\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0,\n          iron: 2,\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5,\n          iron: 45,\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9,\n          iron: 22,\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7,\n          iron: 6,\n        },\n      ],\n    };\n  },\n  methods: {\n    // create function to fetch data from API\n    getData() {\n      axios\n        .get(apiURL + \"doctors\")\n        .then((response) => {\n          this.desserts = response.data;\n          console.log(\"doctor -\".response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n"],"mappings":"AASA,MAAAA,MAAA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA;AACA,OAAAC,KAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,EACA;MACAC,QAAA,GACA;QACAC,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA,GACA;QACAL,IAAA;QACAC,QAAA;QACAC,GAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA;IAEA;EACA;EACAC,OAAA;IACA;IACAC,QAAA;MACAf,KAAA,CACAgB,GAAA,CAAApB,MAAA,cACAqB,IAAA,CAAAC,QAAA;QACA,KAAAX,QAAA,GAAAW,QAAA,CAAAjB,IAAA;QACAkB,OAAA,CAAAC,GAAA,YAAAF,QAAA,CAAAjB,IAAA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}